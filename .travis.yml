dist: xenial
sudo: required
before_install:
- sudo apt-get update
- sudo apt-get install tomcat7
- sudo apt-get install ant-optional
before_script:
- mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('root');"
- nvm ls
- nvm install 8
- nvm use node
- npm -v
- node -v
- env
- npm install -g bower
- chmod +x ./get_seroUtils.sh
- "./get_seroUtils.sh"
- ls -l ./WebContent/WEB-INF/lib/seroUtils.jar
- sed -i '94s/.*/        return "'$SCADA_LTS_MILESTONE'";/' ./src/com/serotonin/mango/Common.java
- cd ./WebContent/resources/app; bower update;
- cd ../../..
- cd ./scadalts-ui
- npm install
- cd ../
language: java
jdk:
- openjdk8
services:
- docker
- mysql
script: ant war && ant junit
branches:
  only:
  - "/^test-2.3.3.*$/"
  - "/^develop.*$/"
  - "/^master.*$/"
  - "/^f_test_233/#1402.*$/"
notifications:
  email: false
env:
  matrix:
  - CATALINA_HOME=/usr/share/tomcat7
  global:
  - secure: cR5pnB4aaHD7lrnGi8NMbLYbpirlandMFAXlrmK5Uc4YPph8xKtjq96TzpaEXStuVz5yZfGiIdeQuRzRD+SdowY09zasxe/DIgBbQZZ0uFbbmOZM0A5ukD8yxOgb2fFp3c5alD9IydgtK101A67x+w9wFzyU969DIFVk/dxRBuylTFk27R3KET1OIU4++wPL37AJ29tJ6S8UynMndiq75m6FbPU5W238JbEuJXXjMVdUTN074qFCXAgk+9NNz8tkPsObtzG/agx9dYJ2euxYQ1t4utcInI9AIYV9PZAec2NFuw4o5DBQCZl6fr+Mt4UrkKcoPoDQYp7RsIIoTmync4re5K1z1DhFujbGYO73CELs+0/LpND11J+IZy06yWJWMfM+x2T3fMtUaMUJ7yNv4trULOyS56TrnzxYea/EoWMLysZgu2thKEO4kud1U/9qI1oyYLdtiBcDerFBweLN1ylcPyOsqWnODtNT/0lz9NMv776VKB1raTdwnJvGONxL1VyG8rTcEJdP9pO3A75J5n02ZgKyZyLQ7IEyNg1vWRIDEfwGNa2aIY7wjk1Gmta7Q2UVCSmpSTnLo/FZ9Cyu0f5B7+T/4J2eA3dgQtsWpZR8GCFkB+Ijf/wOqlvbQrkTDbwZ/xgyIh5UrQV4oQCOoX1x0mi4s/rJuOSP4mGNwus=
  - secure: frO0+SDBJx5QTLzVY1rhDrsh+9pM+0C7JfVrE97Up2zu6q0zAXcu9GfTMKJsmUS0aUZ7znyEiN9J2m18eDj7l4CQBAE+J38+IQ0qyVYYhDiKGYhCPydUVQAKxGLOqFyZ/5u3btI/u3NFXjz4M+fWVnqz+FcIJGsybnHMcTl4P5K2KPgqpMaijVhNmttaIhIIU15oPAto+8SU4BiLPyBVrW5gKe+rmjdrbDaOr7cSDv0S+zgIwyr+iUC2SbDtEfkNww+fW73lsqhx5MZD4QiY5pC12j1i6iiXo1uKCRqvsWihUiK5zwZGRHxQxqEcYA6yqFS1EtmqhYCN8QJHOxGaQE5Y+nx7Nq5Zo8gu6OvHWXVieD70g5z0ShzjoXSSDebjFE0zRTTd9zHYwa5W4uK7ppLCzs+lJmUdUS1e/Bvq37yAG77dwVj1HryWMwO9anUn3bwgxvXZQSF1z0EJJvAZZkFohx+jYaU7DGI4IxVmy2NHehER18VVczSks9DA+nFbr11Gq773RpfL4I3X9BP6XIZHhP/5V4bVsdZ5dZZweDxOD+xS0oUO1skrA7H7PeOUsQH9DnKqwqoLbHV1ERBsgiWeOz7q3p/Imde7Vu+ZkR8JdeKpQKtwbUEJkCg1UKvu+0nBwsGwSShjCDLfaQY77uLIrvcQyI2fTmhxsS3BKYw=
after_script:
- wget https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.85/bin/apache-tomcat-7.0.85.tar.gz
- mkdir ./docker/app
- mv apache-tomcat-7.0.85.tar.gz ./docker/app
- ls -l ./docker/app/apache-tomcat-7.0.85.tar.gz
- cd ./docker/app
- echo `pwd`
- echo `ls -l`
- tar -zxvf apache-tomcat-7.0.85.tar.gz
- ls -l
- mv ./apache-tomcat-7.0.85/* ./
- rm -rf ./apache-tomcat-7.0.85
- cp ../../ScadaBR.war ./webapps
- ls -l ./webapps/ScadaBR.war
- cp ../../WebContent/WEB-INF/lib/mysql-connector-java-3.1.8-bin.jar ./lib/
- cp ../../WebContent/WEB-INF/lib/mysql-connector-java-5.1.38-bin.jar ./lib/
- ls -l ./lib/mysql-connector-java-3.1.8-bin.jar
- ls -l ./lib/mysql-connector-java-5.1.38-bin.jar
- cp -f ../config/context.xml ./conf/
- cat ./conf/context.xml
- cd ../
- pwd
- ls
- docker version
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
- export TAGISSUE=`echo $TRAVIS_BRANCH | egrep -o '[0-9][0-9][0-9][0-9]' | head -n1`
- export TAGOLDISSUE=`echo $TRAVIS_BRANCH | egrep -o '[0-9][0-9][0-9]' | head -n1`
- echo $TAGISSUE
- export TAGISSUE=`if [ "$TAGISSUE" == "" ]; then echo $TAGOLDISSUE; else echo $TAGISSUE
  ; fi`
- echo $TAGISSUE
- export TAG_DEV_OR_ISSUE=`if [ "$TRAVIS_BRANCH" == "develop" ]; then echo "siv_dev";
  else echo $TAGISSUE ; fi`
- echo $TAG_DEV_OR_ISSUE
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TAG_DEV_OR_ISSUE
  ; fi`
- echo $IMAGE_NAME; echo $TAG; echo $TRAVIS_COMMIT
- docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
- docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
- docker push $IMAGE_NAME:$TAG
